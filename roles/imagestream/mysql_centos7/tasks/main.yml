- name: Create image stream
  k8s:
    state: present
    definition: "{{ lookup('file', 'mysql-centos7-is-example.yml')}}"

- name: Wait for image stream to appear
  k8s_facts:
    kind: ImageStream
    namespace: mysql-centos7-imagestream
    name: mysql
  register: imagestream
  until: imagestream.get("resources", [])
  retries: 20
  delay: 10

# Create a backup
- name: Create ark backup of image stream
  k8s:
    state : present
    definition: "{{ lookup('file', 'create-backup-mysql-centos7-is.yml')}}"

- name: Wait for backup to complete
  k8s_facts:
    kind: Backup
    api_version: ark.heptio.com/v1
    namespace: heptio-ark
    name: mysql-centos7-imagestream-backup
  register: backup
  until:  backup.get("resources", []) 
          and backup.resources[0].get("status", {}).get("phase", "") == "Completed"
  retries: 10
  delay: 5

# Simulate DR and restore
- name: Delete mysql image stream
  k8s:
    state: absent
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: mysql-centos7-imagestream

- name: Wait for namespace to be deleted
  k8s_facts:
    kind: Namespace
    api_version: v1
    name: mysql-centos7-imagestream
  register: ns
  until:  not ns.get("resources", [""])
  retries: 10
  delay: 5

# Restore part
- name: Restore service
  when: not travisCI
  block:
    - name: Create ark restore of mysql image stream
      k8s:
        state: present
        definition: "{{ lookup('file', 'create-restore-mysql-centos7-is.yml')}}"

    - name: Wait for restore to finish
      k8s_facts:
        kind: Restore
        api_version: ark.heptio.com/v1
        namespace: heptio-ark
        name: mysql-centos7-imagestream-restore
      register: restore
      until:  restore.get("resources", [])
              and restore.resources[0].get("status", {}).get("phase", "") == "Completed"
      retries: 20
      delay: 10

    - name: Wait for image stream to appear
      k8s_facts:
        kind: ImageStream
        namespace: mysql-centos7-imagestream
        name: mysql
      register: imagestream
      until: imagestream.get("resources", [])
      retries: 20
      delay: 10

    - name: Delete ark restore of mysql (workaround to use common name for restore)
      k8s:
        state: absent
        definition: "{{ lookup('file', 'create-restore-mysql-centos7-is.yml')}}"
