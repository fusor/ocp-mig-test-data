---
- name: Create service
  block:
    - name: Create service example
      k8s:
        state: present
        definition: "{{ lookup('file', 'service-template.yml') }}"

    - name: Wait 1 minute for services become available
      k8s_facts:
        kind: Service
        api_version: v1
        namespace: service-example
        label_selectors: "name=my-service"
      register: deploy
      until: deploy.get("resources", []) and deploy.resources | length == 5
      retries: 12
      delay: 5

    - name: Wait 2 minute for deployment
      k8s_facts:
        kind: Deployment
        api_version: v1
        namespace: service-example
        label_selectors: "name=my-service"
      register: deploy
      until:  deploy.get("resources", [])
              and deploy.resources[0].get('status', {}).get('availableReplicas', -1) == deploy.resources[0].get("spec", {}).get('replicas', -2)
      retries: 24
      delay: 5

- name: Create a backup
  when: with_backup
  block:
    - name: Create backup
      include_role:
        name: backup

- name: Restore service
  when: with_restore
  block:
    - name: Start restoring 
      include_role:
        name: restore

    - name: Wait 2 minutes for service to appear
      k8s_facts:
        api_version: v1
        kind: Service
        namespace: service-example
      register: svc
      until: svc and (svc.resources | length == 5)
      retries: 10
      delay: 10
