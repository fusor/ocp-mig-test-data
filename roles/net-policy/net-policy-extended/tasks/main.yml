- name: Create resources
  k8s:
    state: present
    definition: "{{ lookup('file', 'net-pol-template.yml') }}"

- name: Wait for pod running on second namespace
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: net-pr-2
    name: httpd-ex
  register: pod
  until:  pod.get("resources", [])
          and pod.resources[0].get("status", {}).get("phase", "") ==
          "Running"
  retries: 30
  delay: 10

- name: Create resources
  k8s:
    state: present
    definition: "{{ lookup('file', 'net-pol-nets-template.yml') }}"

- name: Create backup
  when: with_backup
  block:
    - name: Create backup
      include_role:
        name: backup

- name: Restore service
  when: with_restore
  block:
    - name: Start restoring 
      include_role:
        name: restore

- name: Wait for pod running on second namespace
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: net-pr-2
    name: httpd-ex
  register: pod
  until:  pod.get("resources", [])
          and pod.resources[0].get("status", {}).get("phase", "") ==
          "Running"
  retries: 30
  delay: 10

- name: Delete ark restore (workaround to use common name for restore)
  k8s:
    state: absent
    definition: "{{ lookup('file', 'create-restore-net-pol.yml')}}"

# Testing
- name: Extract the internal pod ip
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: net-pr-2
    name: httpd-ex
  register: pod

- set_fact:
    internal_ip: "{{ pod.resources[0].status.podIP }}"

- name: Ping pod from inside of the netnamespace
  k8s:
    state: present
    definition:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: ping
        namespace: net-pr-1
      spec:
        activeDeadlineSeconds: 100
        template:
          metadata:
            name: ping
            namespace: net-pr-1
          spec:
            containers:
            - name: ping
              image: centos/httpd-24-centos7
              command: ["ping",  "{{ internal_ip }}", "-c1"]
            restartPolicy: Never

- name: Ensure job succeed
  k8s_facts:
    api_version: batch/v1
    kind: Job
    namespace: net-pr-1
    name: ping
  register: job
  retries: 20
  delay: 5
  until:  job.get("resources", []) and
          job.resources[0].get("status").get("active", 0) == 0 and
          job.resources[0].status.get("succeeded", 0) == 1

- name: Ping internal pod from outside of the netnamespace
  k8s:
    state: present
    definition:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: ping
        namespace: net-ext
      spec:
        activeDeadlineSeconds: 15
        template:
          metadata:
            name: ping
          spec:
            containers:
            - name: ping
              image: centos/httpd-24-centos7
              command: ["ping",  "{{ internal_ip }}", "-c1"]
            restartPolicy: Never

- name: Ensure job failed
  k8s_facts:
    api_version: batch/v1
    kind: Job
    namespace: net-ext
    name: ping
  register: job
  retries: 20
  delay: 5
  until:  job.get("resources", []) and
          job.resources[0].get("status").get("active", 0) == 0 and
          (
            job.resources[0].status.get("failed", 0) == 1 or
            job.resources[0].status.get("conditions", [{}])[0].get("type", "")
            == "Failed"
          )

# Cleanup
- name: Clean up
  k8s:
    state: absent
    definition: "{{ lookup('file', 'net-pol-template.yml') }}"
