- name: Create resources
  k8s:
    state: present
    definition: "{{ lookup('file', 'net-mul-template.yml') }}"

- name: Wait for namespaces
  k8s_facts:
    kind: Namespace
    name: net-mul-1
  register: ns
  retries: 10
  delay: 5
  until:  ns.get("resources", [])

- name: Wait for namespaces
  k8s_facts:
    kind: Namespace
    name: net-mul-2
  register: ns
  retries: 10
  delay: 5
  until:  ns.get("resources", [])

- name: Wait for namespaces
  k8s_facts:
    kind: Namespace
    name: net-mul-ext
  register: ns
  retries: 10
  delay: 5
  until:  ns.get("resources", [])

- name: Wait for pod
  k8s_facts:
    kind: Pod
    name: httpd-ex
    namespace: net-mul-2
  register: pod
  retries: 10
  delay: 5
  until:  pod.get("resources", [])

- name: Connect namespaces, supported only on multitenant plugin
  command: "oc adm pod-network join-projects --to=net-mul-1 net-mul-2"

# TODO: backup and restore

# Testing
- name: Extract the internal pod ip
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: net-mul-2
    name: httpd-ex
  register: pod

- set_fact:
    internal_ip: "{{ pod.resources[0].status.podIP }}"

- name: Ping pod from inside of the netnamespace
  k8s:
    state: present
    definition:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: ping
        namespace: net-mul-1
      spec:
        activeDeadlineSeconds: 100
        template:
          metadata:
            name: ping
            namespace: net-mul-1
          spec:
            containers:
            - name: ping
              image: centos/httpd-24-centos7
              command: ["ping",  "{{ internal_ip }}", "-c1"]
            restartPolicy: Never

- name: Ensure job succeed
  k8s_facts:
    api_version: batch/v1
    kind: Job
    namespace: net-mul-1
    name: ping
  register: job
  retries: 20
  delay: 5
  until:  job.get("resources", []) and
          job.resources[0].get("status").get("active", 0) == 0 and
          job.resources[0].status.get("succeeded", 0) == 1

- name: Ping internal pod from outside of the netnamespace
  k8s:
    state: present
    definition:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: ping
        namespace: net-mul-ext
      spec:
        activeDeadlineSeconds: 15
        template:
          metadata:
            name: ping
          spec:
            containers:
            - name: ping
              image: centos/httpd-24-centos7
              command: ["ping",  "{{ internal_ip }}", "-c1"]
            restartPolicy: Never

- name: Ensure job failed
  k8s_facts:
    api_version: batch/v1
    kind: Job
    namespace: net-mul-ext
    name: ping
  register: job
  retries: 20
  delay: 5
  until:  job.get("resources", []) and
          job.resources[0].get("status").get("active", 0) == 0 and
          job.resources[0].status.get("failed", 0) == 1

# Cleanup
- name: Clean up namespace 1
  k8s:
    state: absent
    definition: "{{ lookup('file', 'net-mul-template.yml') }}"
