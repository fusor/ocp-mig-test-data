---
- name: Create CRD
  k8s:
    state: present
    definition: "{{ lookup('file', 'crd-template.yml')}}"

- name: Wait for CRD creation
  k8s_facts:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: crexamples.samplecontroller.k8s.io
    namespace: crd-example
  register: crd
  until:  crd.get("resources", [])
  retries: 10
  delay: 5

- name: Create custom resource
  k8s:
    state: present
    definition:
      apiVersion: samplecontroller.k8s.io/v1alpha1
      kind: CRExample
      metadata:
        name: cr-example
        namespace: crd-example
        labels:
          name: crd-example
      spec:
        deploymentName: cr-example
        replicas: 1

# Create a backup
- name: Create velero backup of crd and custom resource
  k8s:
    state : present
    definition: "{{ lookup('file', 'create-backup-crd.yml')}}"

- name: Wait 1 minute for backup to complete
  k8s_facts:
    api_version: ark.heptio.com/v1
    kind: Backup
    namespace: heptio-ark
    name: crd-backup
  register: backup
  until: backup
         and (backup.resources | length > 0)
         and (backup.resources[0].get("status", {}).get("phase", "Completed") == "Completed")
  retries: 10
  delay: 5

# Simulate DR and restore
- name: Delete hello pod
  k8s:
    state: absent
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: crd-example

- name: Wait 2 minutes for namespace to be deleted
  k8s_facts:
    api_version: v1
    kind: Namespace
    namespace: crd-example
    name: crd-example
  register: ns
  until: ns.resources | length == 0
  retries: 30
  delay: 5

# Restore part
- name: Restore service
  when: not travisCI
  block:
    - name: Create velero restore of crd
      k8s:
        state: present
        definition: "{{ lookup('file', 'create-restore-crd.yml')}}"

    - name: Wait 3 minutes for restore to finish
      k8s_facts:
        api_version: v1
        kind: Restore
        namespace: heptio-ark
        name: crd-restore
      register: restore
      until: restore
            and (restore.resources | length > 0)
            and (restore.resources[0].get("status", {}).get("phase", 0) == "Completed")
      retries: 20
      delay: 10

    - name: Wait 2 minutes for CRD to appear
      k8s_facts:
        api_version: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        namespace: crd-example
        name: crexamples.samplecontroller.k8s.io
      register: crd
      until: crd and (crd.resources | length > 0)
      retries: 10
      delay: 10

    - name: Wait 2 minutes for custom resource to appear
      k8s_facts:
        api_version: samplecontroller.k8s.io/v1alpha1
        kind: CRExample
        namespace: crd-example
        name: cr-example
      register: cr_example
      until: cr_example and (cr_example.resources | length > 0)
      retries: 10
      delay: 10

    - name: Delete velero restore (workaround to use common name for restore)
      k8s:
        state: absent
        definition: "{{ lookup('file', 'create-restore-crd.yml')}}"
